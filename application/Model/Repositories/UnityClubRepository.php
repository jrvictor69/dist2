<?php

namespace Model\Repositories;

use Doctrine\ORM\EntityRepository;

/**
 * UnityClubRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UnityClubRepository extends EntityRepository {

	/**
	 * Alias of the table
	 * @var string
	 */
	private $_alias = 'unityClub';

	public function findByCriteria($filters = array(), $limit = NULL, $offset = NULL, $sortColumn = NULL, $sortDirection = NULL) {
		$query = $this->_em->createQueryBuilder();

		$query->select($this->_alias)
			->from($this->_entityName, $this->_alias)
			->setFirstResult($offset)
			->setMaxResults($limit);

		foreach ($filters as $filter) {
			$query->where("$this->_alias.".$filter['field'].' '.$filter['operator'].' :'.$filter['field']);
			$query->setParameter($filter['field'], $filter['filter']);
		}

		$query->where("$this->_alias.state = TRUE");

		$sort = '';
		switch ($sortColumn) {
			case 1:
				$sort = 'name';
				break;

			case 2:
				$sort = 'textbible';
				break;

			case 3:
				$sort = 'textbible';
				break;

			case 4:
				$sort = 'created';
				break;

			case 5:
				$sort = 'changed';
				break;

			default: $sort = 'name';
		}

		$query->orderBy("$this->_alias.$sort", $sortDirection);

		return $query->getQuery()->getResult();
	}

	/**
	 *
	 * Returns models according the filters
	 * @param array $filters
	 * @param int $limit
	 * @param int $offset
	 * @param int $sortColumn
	 * @param string $sortDirection
	 * @return Array Objects
	*/
// 	public function findByCriteria($filters = array(), $limit = NULL, $offset = NULL, $sortColumn = NULL, $sortDirection = NULL) {
// 		$query = $this->_em->createQueryBuilder();

// 		$query->select($this->_alias)
// 				->from($this->_entityName, $this->_alias)
// 				->setFirstResult($offset)
// 				->setMaxResults($limit);


// 		foreach ($filters as $filter) {
// 			$query->where("$this->_alias.".$filter['field'].' '.$filter['operator'].' :'.$filter['field']);
// 			$query->setParameter($filter['field'], $filter['filter']);
// 		}
// // 		$filters['state'] = 1;
// // var_dump($filters); exit;
// 		$sort = '';
// 		switch ($sortColumn) {
// 			case 1:
// 				$sort = 'name';
// 				break;

// 			case 2:
// 				$sort = 'motto';
// 				break;

// 			case 3:
// 				$sort = 'description';
// 				break;

// 			case 4:
// 				$sort = 'clubId';
// 				break;

// 			case 6:
// 				$sort = 'created';
// 				break;

// 			case 7:
// 				$sort = 'changed';
// 				break;

// 			default: $sort = 'id'; $sortDirection = 'desc';
// 		}

// // 		$entries = $this->findBy($filters, array($sort => $sortDirection), $limit, $offset);

// // 		return $entries;

// 		$query->orderBy("$this->_alias.$sort", $sortDirection);

// 		return $query->getQuery()->getResult();
// 	}

	/**
	 *
	 * Finds total count of models according the filters
	 * @param array $filters
	 * @return int
	 */
	public function getTotalCount($filters = array()) {
		$query = $this->_em->createQueryBuilder();

		$query->select("count($this->_alias.id)")
			->from($this->_entityName, $this->_alias);

		foreach ($filters as $filter) {
			$query->where("$this->_alias.".$filter['field'].' '.$filter['operator'].' :'.$filter['field']);
			$query->setParameter($filter['field'], $filter['filter']);
		}

		$query->where("$this->_alias.state = TRUE");

		return (int)$query->getQuery()->getSingleScalarResult();
	}
}